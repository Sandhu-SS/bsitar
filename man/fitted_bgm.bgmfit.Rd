% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fitted_bgm.R
\name{fitted_bgm.bgmfit}
\alias{fitted_bgm.bgmfit}
\alias{fitted_bgm}
\title{Fitted (expected) values from the posterior predictive distribution}
\usage{
\method{fitted_bgm}{bgmfit}(
  model,
  newdata = NULL,
  resp = NULL,
  ndraws = NULL,
  re_formula = NULL,
  numeric_cov_at = NULL,
  levels_id = NULL,
  ipts = NULL,
  deriv = 0,
  deriv_model = TRUE,
  summary = TRUE,
  robust = FALSE,
  probs = c(0.025, 0.975),
  xrange = NULL,
  parms_eval = FALSE,
  parms_method = "getPeak",
  idata_method = "m1",
  envir = parent.frame(),
  ...
)

fitted_bgm(model, ...)
}
\arguments{
\item{model}{An object of class \code{bgmfit}.}

\item{newdata}{An optional data frame to be used in predictions. If
\code{NULL} (default), the original data from the fitted model is used.}

\item{resp}{An optional character string to specify response variable when
estimating growth parameter for the univariate-by-subgroup and multivariate
models (see \code{\link[=bgm]{bgm()}} for details on univariate-by-subgroup and
multivariate models). For univariate model, \code{resp = NULL} (default).}

\item{ndraws}{Positive integer indicating the number of posterior draws to be
used in estimation. If \code{NULL} (default), all draws are used.}

\item{re_formula}{Option to indicate whether or not to include the
individual/group-level effects in the estimation. When \code{NA} (default),
the individual-level effects are excluded and therefore population average
growth parameters are computed. When \code{NULL}, individual-level effects
are included in the computation and hence the growth parameters estimates
returned are individual-specific. In both situations, (i.e,, \code{NA} or
\code{NULL}), continuous and factor covariate(s) are appropriately included
in the estimation. The continuous covariates by default are set to their
means (see \code{numeric_cov_at} for details) whereas factor covariates are
left unaltered thereby allowing estimation of (factor) covariate specific
population average and individual-specific growth parameter at mean value
of continous covaristes(s).}

\item{numeric_cov_at}{An optional argument to specify the value of continuous
covariate(s). The default \code{NULL} option set the continuous
covariate(s) at their mean. Alternatively, a named list can be
supplied to manually set these values. For example, \code{numeric_cov_at =
  list(xx = 2)} will set the continuous covariate varibale 'xx' at 2. The
argument \code{numeric_cov_at} is ignored when no continuous covariate is
included in the model.}

\item{levels_id}{An optional argument to specify the ids for hierarchical
model (default \code{NULL}. It is used only when model is fitted to the
data with 3 or more levels of hierarchy. For a two level model, the id for
second level is automatically inferred from the fitted model. Even for 3 or
higher level model, ids are inferred from the fitted model but under the
assumption that hierarchy is specified from lower to upper levels i.e, id,
study assuming that id is nested within the studies. However, it is not
gauranted that these ids are sorted correctly. Therefore, it is better to
set them manually.}

\item{ipts}{An integer to set the length of the predictor variable to get a
smooth velocity curve. The \code{NULL} will return original values whereas
an integer such as \code{ipts = 10} (default) will interpolate the
predictor. It is important to note that these interpolations do not alter
the range of predictor when calculating population average and the
individual specific velocity curves.}

\item{deriv}{An integer to specify whether to estimate distance curve or
derivatives (velocity and acceleration curves). Default \code{deriv = 0} is
for the distance curve whereas \code{deriv = 1} for velocity curve and
\code{deriv = 2} for the acceleration curve.}

\item{deriv_model}{A logical (default \code{TRUE}) to indicate whether to
estimate model based derivatives or from the differentiation of the
distance curve. When model is fit with \code{decomp = 'QR'}, the only
approach available to estimate derivatives is the  differentiation of the
distance curve.}

\item{summary}{A logical (default \code{TRUE}) indicating whether only the
Estimate should be returned or Estimate along with SE and CI should be
computed. Setting this option to \code{FALSE} will reduce the computation
time but no SE or CI estimates will be available.}

\item{robust}{If \code{FALSE} (the default) the mean is used as the measure
of central tendency and the standard deviation as the measure of
variability. If \code{TRUE}, the median and the median absolute deviation
(MAD) are applied instead. Ignored if summary is \code{FALSE}.}

\item{probs}{The percentiles to be computed by the \code{quantile}
function. Only used if \code{summary} is \code{TRUE}.}

\item{xrange}{An integer to set the predictor range (i.e., age) when
executing the interpolation via \code{ipts}. The default \code{NULL} sets
the individual specific predictor range whereas code \code{xrange = 1} sets
same range for all individuals within the higher order grouping variable
(e.g., study). Code \code{xrange  = 2} sets the identical range dplyr::across the
entire sample. Lastly, a paired numeric values can be supplied e.g.,
\code{xrange = c(6, 20)} will set the range between 6 and 20.}

\item{parms_eval}{A logical (default \code{FALSE}) to specify whether or not
to get growth parameters on the fly.}

\item{parms_method}{A character to specify the method used to when
evaluating \code{parms_eval}. The default is \code{getPeak} which uses
the \code{\link[sitar:getPeakTrough]{sitar::getPeak()}} function from the \code{sitar} package. The
alternative option is \code{findpeaks} that uses the \code{\link[pracma:findpeaks]{pracma::findpeaks()}}
function function from the \code{pracma} package.}

\item{idata_method}{A character string to indicate interpolation
method. Options available are \code{m1} (default) and
\code{m2}. See \code{idata_method} argument of the \code{get.newdata}
function for details.}

\item{envir}{Indicator to set the environment of function evaluation.
The default is \code{parent.frame}.}

\item{...}{Additional arguments passed to the \link[brms:fitted.brmsfit]{brms::fitted.brmsfit}
function. Please see \code{brms::fitted.brmsfit} for details on
various options available.}
}
\value{
An array of predicted mean response values. See \link[brms:fitted.brmsfit]{brms::fitted.brmsfit}
for details.
}
\description{
This method is an alias of \code{\link[brms]{posterior_epred.brmsfit}}
with additional arguments for obtaining summaries of the computed draws.
}
\details{
The \code{fitted_bgm} function is a wrapper around
the \link[brms:fitted.brmsfit]{brms::fitted.brmsfit}. The \link[brms:fitted.brmsfit]{brms::fitted.brmsfit}
function from the \code{brms} package can used to plot the fitted (distance)
curve for an \emph{bsitar} model when outcome (e.g., height) is untransformed.
However, when the outcome is log or square root transformed, the
\link[brms:fitted.brmsfit]{brms::fitted.brmsfit} will return the fitted curve on the log or
square root scale whereas the \code{\link[=fitted_bgm]{fitted_bgm()}} will
return the fitted curve on the original scale. Furthermore, the
fitted_bgm also displays the velocity curve on the original scale
after making required back-transformation. Apart from these differences,
both these functions (\link[brms:fitted.brmsfit]{brms::fitted.brmsfit} and
\code{\link[=fitted_bgm]{fitted_bgm()}}) work in the same manner. In other words,
user can specify all the arguments which are available in the
\link[brms:fitted.brmsfit]{brms::fitted.brmsfit}. Because of this, the name is kept same except
for adding an underscore at the end of the name (\emph{fitted} to
\emph{fitted_bgm}).
}
\examples{
#
# The following examples show the use of *fitted_bgm* to estimate  
# population average and individual-specific distance and velocity 
# curves.
#
# Fit Bayesian SITAR model 
# berkeley_fit <- bgm(x = age, y = height, id = id, data = data, df = 4,
#                     chains = 2, iter = 1000, thin = 10)
#
# To avoid running the model which takes some time, the fitted model has 
# already been saved as berkeley_fit.rda object. The model is fitted using 2 
# chain  with 1000  iteration per chain (to save time) and setting thin as 1 
# (to save memory also).
# 
model <- berkeley_fit
#
# Population average distance curve
fitted_bgm(model, deriv = 0, re_formula = NA)
#
# Individual-specific distance curves
fitted_bgm(model, deriv = 0, re_formula = NULL)
#
# Population average velocity curve
fitted_bgm(model, deriv = 1, re_formula = NA)
#
# Individual-specific velocity curves
fitted_bgm(model, deriv = 1, re_formula = NULL)
 

}
