if ('curve' %in% names(d.)) {
d.out <- d. %>% dplyr::select(-curve)
} else {
d.out <- d.
}
}
if (!grepl("v", opt, ignore.case = T)) {
plot.o.v <- NULL
}
if (length(curves) > 1 & layout == 'facet') {
plot.o <- patchwork::wrap_plots(plot.o.d + plot.o.v) %>%
add_global_label(
Xlab = label.x,
Ylab = "",
size = 5,
Xgap = 0.08,
Ygap = 0.04
) +
patchwork::plot_layout(guides = "collect") &
ggplot2::theme(legend.position = legendpos,
legend.direction = 'horizontal')
} else if (length(curves) == 1 & layout == 'facet') {
if (!is.null(plot.o.d)) {
plot.o <- plot.o.d +
ggplot2::labs(x = label.x, y = label.d) +
ggplot2::theme(plot.title = ggplot2::element_blank()) +
ggplot2::theme(legend.position = legendpos,
legend.direction = 'horizontal')
} else if (!is.null(plot.o.v)) {
plot.o <- plot.o.v +
ggplot2::labs(x = label.x, y = label.v) +
ggplot2::theme(plot.title = ggplot2::element_blank()) +
ggplot2::theme(legend.position = legendpos,
legend.direction = 'horizontal')
}
}
if (length(curves) > 1 & layout == 'single') {
data_d <- subset(d., curve == "distance")
data_v <- subset(d., curve == "velocity")
by_join_ <- c(IDvar, Xx, groupby_str_d)
by_join_ <- unique(by_join_)
data_dv <- dplyr::left_join(data_d, data_v, by = by_join_)
data_dv.o <- data_dv
if (grepl("d", opt, ignore.case = T)) {
index_opt <- gregexpr("d", opt, ignore.case = T)[[1]]
dist.. <- substr(opt, index_opt, index_opt)
if (grepl("^[[:upper:]]+$", dist..)) {
data_dv <-
data_dv %>%
dplyr::mutate(groupby = interaction(!!as.name(groupby_str_d))) %>%
dplyr::mutate(groupby.x = interaction(!!as.name(groupby_str_d)))
} else if (!grepl("^[[:upper:]]+$", dist..)) {
if (is.null(groupby_str_d)) {
data_dv <- data_dv %>% dplyr::mutate(groupby = NA) %>%
dplyr::mutate(groupby.x = NA)
} else if (!is.null(groupby_str_d)) {
data_dv <- data_dv %>%
dplyr::mutate(groupby =
interaction(!!as.name(groupby_str_d))) %>%
dplyr::mutate(groupby.x = interaction(!!as.name(groupby_str_d)))
}
}
}
if (grepl("v", opt, ignore.case = T)) {
index_opt <- gregexpr("v", opt, ignore.case = T)[[1]]
velc.. <- substr(opt, index_opt, index_opt)
if (grepl("^[[:upper:]]+$", velc..)) {
data_dv <-
data_dv %>%
dplyr::mutate(groupby = interaction(!!as.name(groupby_str_v))) %>%
dplyr::mutate(groupby.y = groupby)
} else if (!grepl("^[[:upper:]]+$", velc..)) {
if (is.null(groupby_str_v)) {
data_dv <- data_dv %>% dplyr::mutate(groupby = NA) %>%
dplyr::mutate(groupby.y = NA)
} else if (!is.null(groupby_str_v)) {
data_dv <- data_dv %>%
dplyr::mutate(groupby =
interaction(!!as.name(groupby_str_v))) %>%
dplyr::mutate(groupby.y = interaction(!!as.name(groupby_str_v)))
}
}
}
if (grepl("^[[:upper:]]+$", dist..) &
!grepl("^[[:upper:]]+$", velc..)) {
if (is.null(groupby_str_v)) {
data_dv <-
data_dv %>%
dplyr::mutate(groupby.x = interaction(!!as.name(groupby_str_d)),
groupby.y = NA)
} else if (!is.null(groupby_str_v)) {
data_dv <-
data_dv %>%
dplyr::mutate(groupby.x = interaction(!!as.name(groupby_str_d)),
groupby.y =
interaction(!!as.name(groupby_str_v)))
}
}
if (!grepl("^[[:upper:]]+$", dist..) &
grepl("^[[:upper:]]+$", velc..)) {
if (is.null(groupby_str_d)) {
data_dv <-
data_dv %>% dplyr::mutate(groupby.x = NA,
groupby.y =
interaction(!!as.name(groupby_str_v)))
} else if (!is.null(groupby_str_d)) {
data_dv <-
data_dv %>%
dplyr::mutate(groupby.x = interaction(!!as.name(groupby_str_d)),
groupby.y =
interaction(!!as.name(groupby_str_v)))
}
}
t.s.axis <-
with(data_dv, transform.sec.axis(Estimate.x, Estimate.y))
if (!is.null(set.linetype.groupby)) {
if (set.linetype.groupby == 'groupby') {
linetype.groupby.x <- data_dv[['groupby.x']]
linetype.groupby.y <- data_dv[['groupby.y']]
}
} else if (is.null(set.linetype.groupby)) {
linetype.groupby.x <- NULL
linetype.groupby.y <- NULL
}
if (set.linetype.groupby == 'solid') {
linetype.groupby.x <- NULL # 'solid'
linetype.groupby.y <- NULL # 'solid'
}
plot.o <- data_dv %>%
ggplot2::ggplot(., ggplot2::aes(!!as.name(Xx))) +
ggplot2::geom_line(
ggplot2::aes(
y = Estimate.x,
group = groupby.x,
linetype = linetype.groupby.x,
colour = label.d
),
linewidth = linewidth.main
) +
ggplot2::geom_line(
ggplot2::aes(
y = t.s.axis$fwd(Estimate.y),
group = groupby.y,
linetype = linetype.groupby.y,
colour = label.v
),
linewidth = linewidth.main
) +
ggplot2::scale_y_continuous(sec.axis =
ggplot2::sec_axis(~ t.s.axis$rev(.),
name = label.v)) +
ggplot2::labs(x = label.x, y = label.d, color = "") +
ggplot2::scale_color_manual(values = c(color.d, color.v)) +
ggplot2::scale_x_continuous(breaks = seq(x_minimum, x_maximum, 1)) +
jtools::theme_apa(legend.pos = legendpos) +
ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5)) +
ggplot2::theme(axis.title.y.right = ggplot2::element_text(angle = 90))
if (grepl("d", bands, ignore.case = T)) {
plot.o <- plot.o +
ggplot2::geom_ribbon(
data = data_dv,
ggplot2::aes(
ymin = .data[[paste0(probtitles[1], '.x')]],
ymax = .data[[paste0(probtitles[2], '.x')]],
group = groupby.x,
linetype = linetype.groupby.x
),
fill = color.d,
alpha = band.alpha
)
}
if (grepl("v", bands, ignore.case = T)) {
plot.o <- plot.o +
ggplot2::geom_ribbon(
data = data_dv,
ggplot2::aes(
ymin = t.s.axis$fwd(.data[[paste0(probtitles[1], '.y')]]),
ymax = t.s.axis$fwd(.data[[paste0(probtitles[2], '.y')]]),
group = groupby.y,
linetype = linetype.groupby.y
),
fill = color.v,
alpha = band.alpha
)
}
if (pv) {
data_hline <- p. %>% dplyr::filter(Parameter == name.pv)
plot.o <- plot.o +
ggplot2::geom_hline(
data = data_hline,
ggplot2::aes(yintercept = t.s.axis$fwd(.data[['Estimate']])),
linewidth = linewidth.pv,
linetype = linetype.pv
)
if (grepl("p", bands, ignore.case = T)) {
plot.o <- plot.o +
ggplot2::annotate(
"rect",
xmin = -Inf,
xmax = Inf,
ymin = t.s.axis$fwd(data_hline[[paste0(probtitles[1], '')]]),
ymax = t.s.axis$fwd(data_hline[[paste0(probtitles[2], '')]]),
alpha = band.alpha
)
}
}
if (apv) {
data_vline <- p. %>% dplyr::filter(Parameter == name.apv)
plot.o <- plot.o +
ggplot2::geom_vline(
data = data_vline,
ggplot2::aes(xintercept = .data[['Estimate']]),
linewidth = linewidth.apv,
linetype = linetype.apv
)
if (grepl("p", bands, ignore.case = T)) {
plot.o <- plot.o +
ggplot2::annotate(
"rect",
xmin = (data_vline[[paste0(probtitles[1], '')]]),
xmax = (data_vline[[paste0(probtitles[2], '')]]),
ymin = -Inf,
ymax = Inf,
alpha = band.alpha
)
}
}
data_dv <- data_dv.o
if ('curve' %in% names(data_dv)) {
d.out <- data_dv %>% dplyr::select(-curve)
} else {
d.out <- data_dv
}
}
}
############
xvars <- model$model_info$xvar
yvars <- model$model_info$yvar
xyvars <- c(xvars, yvars)
allvars <- names(as.data.frame(newdata))
factor_vars <- names(newdata[sapply(newdata, is.factor)])
numeric_vars <- names(newdata[sapply(newdata, is.numeric)])
cov_vars <- model$model_info$cov
cov_factor_vars <- intersect(cov_vars, factor_vars)
cov_numeric_vars <- intersect(cov_vars, numeric_vars)
groupby_fstr <- c(cov_factor_vars)
groupby_fistr <- c(IDvar, cov_factor_vars)
groupby_str_au <- groupby_fistr
if (grepl("a", opt, ignore.case = T) |
grepl("u", opt, ignore.case = T)) {
if (!is.null(cov_vars)) {
stop("Adjusted curves not yet supported for model with covariate(s)")
}
if (grepl("a", opt, ignore.case = T)) {
xyadj_ed <- xyadj_(model, resp = NULL)
out_a_ <-
d.out <- trimlines_(model, newdata = xyadj_ed, trim = trim)
out_a_ <-
out_a_ %>%
dplyr::mutate(groupby = interaction(!!as.name(groupby_str_au)))
x_minimum_a_ <- floor(min(out_a_[[Xx]]))
x_maximum_a_ <- ceiling(max(out_a_[[Xx]]))
if (!is.null(set.linetype.groupby)) {
if (set.linetype.groupby == 'groupby') {
linetype.groupby <- out_a_[['groupby']]
}
} else if (is.null(set.linetype.groupby)) {
linetype.groupby <- NULL
}
if (set.linetype.groupby == 'solid') {
linetype.groupby <- NULL # 'solid'
}
############## set to NULL
linetype.groupby <- NULL
plot.o.a <- out_a_ %>%
ggplot2::ggplot(., ggplot2::aes(!!as.name(Xx))) +
ggplot2::geom_line(
ggplot2::aes(
y = !!as.name(Yy),
group = groupby,
linetype = linetype.groupby,
colour = label.d
),
linewidth = linewidth.main
) +
ggplot2::labs(x = label.x, y = label.d, color = "") +
ggplot2::scale_color_manual(values = c(color.adj)) +
ggplot2::scale_x_continuous(breaks =
seq(x_minimum_a_, x_maximum_a_, 1)) +
jtools::theme_apa(legend.pos = legendpos) +
ggplot2::theme(legend.position = "none") +
ggplot2::labs(y = paste0("Adjusted ", "individual curves")) +
ggplot2::theme(axis.title.y.right = ggplot2::element_text(angle = 90)) +
ggplot2::labs(title = label.adj) +
ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5))
if (nchar(opt) == 1) {
plot.o.a <- plot.o.a +
ggplot2::theme(plot.title = ggplot2::element_blank())
} else if (nchar(opt) > 1) {
plot.o.a <- plot.o.a +
ggplot2::theme(axis.title.y = ggplot2::element_blank())
}
if (!grepl("u", opt, ignore.case = T)) {
suppressMessages({
plot.o.a <- plot.o.a +
ggplot2::scale_color_manual(values = c(color_single))
})
}
} else if (!grepl("a", opt, ignore.case = T)) {
plot.o.a <- NULL
}
if (grepl("u", opt, ignore.case = T)) {
xyadj_ed <- xyunadj_(model, resp = NULL)
out_u_ <-
d.out <- trimlines_(model, newdata = xyadj_ed, trim = trim)
out_u_ <-
out_u_ %>%
dplyr::mutate(groupby = interaction(!!as.name(groupby_str_au)))
if (!is.null(set.linetype.groupby)) {
if (set.linetype.groupby == 'groupby') {
linetype.groupby <- out_a_[['groupby']]
}
} else if (is.null(set.linetype.groupby)) {
linetype.groupby <- NULL
}
if (set.linetype.groupby == 'solid') {
linetype.groupby <- NULL # 'solid'
}
############## set to NULL
linetype.groupby <- NULL
plot.o.u <- out_u_ %>%
ggplot2::ggplot(., ggplot2::aes(!!as.name(Xx))) +
ggplot2::geom_line(
ggplot2::aes(
y = !!as.name(Yy),
group = groupby,
linetype = linetype.groupby,
colour = label.d
),
linewidth = linewidth.main
) +
ggplot2::labs(x = label.x, y = label.d, color = "") +
ggplot2::scale_color_manual(values = c(color.unadj)) +
ggplot2::scale_x_continuous(breaks = seq(x_minimum, x_maximum, 1)) +
jtools::theme_apa(legend.pos = legendpos) +
ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5)) +
ggplot2::theme(legend.position = "none") +
ggplot2::labs(y = paste0("Unadjusted ", "individual curves")) +
ggplot2::theme(axis.title.y.right = ggplot2::element_text(angle = 90)) +
ggplot2::labs(title = label.unadj) +
ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5))
if (!grepl("a", opt, ignore.case = T)) {
suppressMessages({
plot.o.u <- plot.o.u +
ggplot2::scale_color_manual(values = c(color_single))
})
}
if (nchar(opt) == 1) {
plot.o.u <- plot.o.u +
ggplot2::theme(plot.title = ggplot2::element_blank())
} else if (nchar(opt) > 1) {
plot.o.u <- plot.o.u +
ggplot2::theme(axis.title.y = ggplot2::element_blank())
}
} else if (!grepl("u", opt, ignore.case = T)) {
plot.o.u <- NULL
}
if (grepl("a", opt, ignore.case = T) &
!grepl("u", opt, ignore.case = T)) {
plot.o <- plot.o.a
} else if (!grepl("a", opt, ignore.case = T) &
grepl("u", opt, ignore.case = T)) {
plot.o <- plot.o.u
} else if (grepl("a", opt, ignore.case = T) &
grepl("u", opt, ignore.case = T)) {
if (layout == 'facet') {
out_a_u_ <-
d.out <- out_a_ %>% dplyr::mutate(curve = 'Adjusted') %>%
dplyr::bind_rows(., out_u_ %>%
dplyr::mutate(curve = 'Unadjusted')) %>%
data.frame()
x_minimum_a_ <- floor(min(out_a_[[Xx]]))
x_maximum_a_ <- ceiling(max(out_a_[[Xx]]))
if (!is.null(set.linetype.groupby)) {
if (set.linetype.groupby == 'groupby') {
linetype.groupby <- out_a_u_[['groupby']]
}
} else if (is.null(set.linetype.groupby)) {
linetype.groupby <- NULL
}
if (set.linetype.groupby == 'solid') {
linetype.groupby <- NULL # 'solid'
}
############## set to NULL
linetype.groupby <- NULL
plot.o <- out_a_u_ %>%
ggplot2::ggplot(., ggplot2::aes(!!as.name(Xx))) +
ggplot2::geom_line(
ggplot2::aes(
y = !!as.name(Yy),
group = groupby,
linetype = linetype.groupby,
colour = label.d
),
linewidth = linewidth.main
) +
ggplot2::labs(x = label.x,
y = label.d,
color = "") +
ggplot2::scale_color_manual(values = c(color_single)) +
ggplot2::scale_x_continuous(breaks =
seq(x_minimum_a_, x_maximum_a_, 1)) +
jtools::theme_apa(legend.pos = legendpos) +
ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5)) +
ggplot2::theme(axis.title.y.right =
ggplot2::element_text(angle = 90)) +
ggplot2::theme(legend.position = "none") +
ggplot2::labs(y = paste0("Individual curves")) +
ggplot2::facet_wrap(~ curve, scales = 'free_x')
}
if (layout == 'single') {
if (!is.null(set.linetype.groupby)) {
if (set.linetype.groupby == 'groupby') {
linetype.groupby <- out_a_[['groupby']]
}
} else if (is.null(set.linetype.groupby)) {
linetype.groupby <- NULL
}
if (set.linetype.groupby == 'solid') {
linetype.groupby <- NULL # 'solid'
}
plot.o <- out_a_ %>%
ggplot2::ggplot(., ggplot2::aes(!!as.name(Xx))) +
ggplot2::geom_line(
data = out_u_,
ggplot2::aes(
y = !!as.name(Yy),
group = groupby,
linetype = linetype.groupby,
colour = label.unadj
),
linewidth = linewidth.main
) +
ggplot2::geom_line(
data = out_a_,
ggplot2::aes(
y = !!as.name(Yy),
group = groupby,
linetype = linetype.groupby,
colour = label.adj
),
linewidth = linewidth.main
) +
ggplot2::labs(x = label.x,
y = label.d,
color = "") +
ggplot2::scale_color_manual(values = c(color.unadj, color.adj)) +
ggplot2::scale_x_continuous(breaks =
seq(x_minimum_a_, x_maximum_a_, 1)) +
jtools::theme_apa(legend.pos = legendpos.adj.unadj) +
ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5)) +
ggplot2::labs(y = paste0("Individual curves")) +
ggplot2::theme(axis.title.y.right = ggplot2::element_text(angle = 90))
}
}
}
if (nchar(opt) > 2) {
if (!exists('plot.o.d'))
plot.o.d <- NULL
if (!exists('plot.o.v'))
plot.o.v <- NULL
if (!exists('plot.o.a'))
plot.o.a <- NULL
if (!exists('plot.o.u'))
plot.o.u <- NULL
suppressMessages({
if (!is.null(plot.o.d)) {
plot.o.d <- plot.o.d +
ggplot2::scale_color_manual(values = c(color_single)) +
ggplot2::theme(axis.title.x = ggplot2::element_blank())
}
if (!is.null(plot.o.v)) {
plot.o.v <- plot.o.v +
ggplot2::scale_color_manual(values = c(color_single)) +
ggplot2::theme(axis.title.x = ggplot2::element_blank())
}
if (!is.null(plot.o.a)) {
plot.o.a <- plot.o.a +
ggplot2::scale_color_manual(values = c(color_single)) +
ggplot2::theme(axis.title.x = ggplot2::element_blank())
}
if (!is.null(plot.o.u)) {
plot.o.u <- plot.o.u +
ggplot2::scale_color_manual(values = c(color_single)) +
ggplot2::theme(axis.title.x = ggplot2::element_blank())
}
})
plot.list <- list(plot.o.d, plot.o.v, plot.o.a, plot.o.u)
plot.list <- plot.list[lengths(plot.list) != 0]
plot.o <- patchwork::wrap_plots(plot.list,
ncol = 2, nrow = NULL) %>%
add_global_label(
Xlab = label.x,
Ylab = "",
size = 5,
Xgap = 0.08,
Ygap = 0.04
)
plot.o <-
plot.o +  patchwork::plot_layout(guides = "collect")
}
}
